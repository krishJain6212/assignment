// Q.1 Using console.log() print out the following statement: The quote 'There is no exercise
// better for the heart than reaching down and lifting people up.' by John Holmes teaches us
// to help one another. Using console.log() print out the following quote by Mother Teresa:

// --> console.log("The quote 'There is no exercise better for the heart than reaching down and lifting people up.' by John Holmes teaches us to help one another.");
// console.log("Mother Teresa once said, 'If you can't feed a hundred people, then feed just one.'");


// Q.2 Check if typeof '10' is exactly equal to 10. If not make it exactly equal?

// --> let value = '10';


// if (typeof value !== 'number') {
    
//     value = Number(value);
// }

// console.log(value); 
// console.log(typeof value === 'number');  


// Q.3 Write a JavaScript Program to find the area of a triangle?

// --> function calculateTriangleArea(base, height) {
//     return 0.5 * base * height;
// }


// let base = 5;   
// let height = 10;

// let area = calculateTriangleArea(base, height);
// console.log("The area of the triangle is: " + area);



// Q.4 Write a JavaScript program to calculate days left until next Christmas?

// --> function daysUntilNextChristmas() {
//     const today = new Date();
//     const currentYear = today.getFullYear();
//     const nextChristmas = new Date(currentYear, 11, 25); 

    
//     if (today > nextChristmas) {
//         nextChristmas.setFullYear(currentYear + 1);
//     }

//     const oneDay = 24 * 60 * 60 * 1000; 
//     const daysLeft = Math.round((nextChristmas - today) / oneDay);

//     return daysLeft;
// }

// console.log("Days until next Christmas: " + daysUntilNextChristmas());

// Q.5 What is Condition Statement?

// --> let number = 5;

// if (number > 10) {
//     console.log("Number is greater than 10");
// } else {
//     console.log("Number is 10 or less");
// }

// Q.6 Find circumference of Rectangle formula : C = 4 * a ?

// --> function calculateCircumferenceSquare(a) {
//     return 4 * a;
// }

// let sideLength = 5;
// console.log("The circumference of the square is: " + calculateCircumferenceSquare(sideLength));

// Q.7 WAP to convert years into days and days into years?

// --> function yearsToDays(years) {
//     return years * 365;
// }

// function daysToYears(days) {
//     return days / 365;
// }


// let years = 2;
// let days = 730;

// console.log(years + " years is " + yearsToDays(years) + " days.");
// console.log(days + " days is " + daysToYears(days) + " years.");

// Q.8 Convert temperature Fahrenheit to Celsius? (Conditional logic Question)

// --> function fahrenheitToCelsius(fahrenheit) {
//     return (fahrenheit - 32) * 5 / 9;
// }


// let tempF = 68;
// let tempC = fahrenheitToCelsius(tempF);

// console.log(tempF + "°F is " + tempC.toFixed(2) + "°C.");

// Q.9 Write a JavaScript exercise to get the extension of a filename.?

// --> function getFileExtension(filename) {
//     return filename.split('.').pop();
// }


// let filename = "example.txt";
// console.log("The extension of the file is: " + getFileExtension(filename));

// Q.10 What is the result of the expression (5 > 3 && 2 < 4)?

// --> let result = (5 > 3 && 2 < 4);
// console.log(result);  

// Q.11 What is the result of the expression (true && 1 && "hello")?

// --> let result = (true && 1 && "hello");
// console.log(result);  


// Q.12 What is the result of the expression true && false || false && true?

// --> let result = true && false || false && true;
// console.log(result);  // Outputs: false


// Q.13 Check Number Is Positive or Negative in JavaScript?

// --> function checkNumberSign(number) {
//     if (number > 0) {
//         return "The number is positive.";
//     } else if (number < 0) {
//         return "The number is negative.";
//     } else {
//         return "The number is zero.";
//     }
// }


// let number = -5;
// console.log(checkNumberSign(number));

// Q.14 Find the Character Is Vowel or Not ?

// --> function isVowel(char) {
//     char = char.toLowerCase();
//     return ['a', 'e', 'i', 'o', 'u'].includes(char);
// }


// let character = 'A';
// if (isVowel(character)) {
//     console.log(character + " is a vowel.");
// } else {
//     console.log(character + " is not a vowel.");
// }

// Q.15 Write to check whether a number is negative, positive or zero?

// --> function checkNumber(number) {
//     if (number > 0) {
//         return "The number is positive.";
//     } else if (number < 0) {
//         return "The number is negative.";
//     } else {
//         return "The number is zero.";
//     }
// }


// let number = 10; 
// console.log(checkNumber(number));

// Q.16 Write to find number is even or odd using ternary operator in JS?

// --> function checkEvenOrOdd(number) {
//     return (number % 2 === 0) ? "Even" : "Odd";
// }


// let number = 7;
// console.log(checkEvenOrOdd(number)); 

// Q.17 Write find maximum number among 3 numbers using ternary operator in JS?

// --> function findMax(num1, num2, num3) {
//     return (num1 > num2) 
//         ? (num1 > num3 ? num1 : num3) 
//         : (num2 > num3 ? num2 : num3);
// }


// let num1 = 15, num2 = 9, num3 = 20;
// console.log("The maximum number is: " + findMax(num1, num2, num3)); 

// Q.18 Write to find minimum number among 3 numbers using ternary operator in JS?

// --> function findMin(num1, num2, num3) {
//     return (num1 < num2) 
//         ? (num1 < num3 ? num1 : num3) 
//         : (num2 < num3 ? num2 : num3);
// }


// let num1 = 15, num2 = 9, num3 = 20;
// console.log("The minimum number is: " + findMin(num1, num2, num3)); 

// Q.19 Write to find the largest of three numbers in JS?

// --> function findLargest(num1, num2, num3) {
//     if (num1 >= num2 && num1 >= num3) {
//         return num1;
//     } else if (num2 >= num1 && num2 >= num3) {
//         return num2;
//     } else {
//         return num3;
//     }
// }


// let num1 = 15, num2 = 25, num3 = 20;
// console.log("The largest number is: " + findLargest(num1, num2, num3)); 

// Q.20 Write to show
// i. Monday to Sunday using switch case in JS?

// --> function getDayOfWeek(dayNumber) {
//     let day;
//     switch (dayNumber) {
//         case 1:
//             day = "Monday";
//             break;
//         case 2:
//             day = "Tuesday";
//             break;
//         case 3:
//             day = "Wednesday";
//             break;
//         case 4:
//             day = "Thursday";
//             break;
//         case 5:
//             day = "Friday";
//             break;
//         case 6:
//             day = "Saturday";
//             break;
//         case 7:
//             day = "Sunday";
//             break;
//         default:
//             day = "Invalid day number!";
//     }
//     return day;
// }


// let dayNumber = 3;
// console.log(getDayOfWeek(dayNumber)); 

// ii. Vowel or Consonant using switch case in JS?

// --> function checkVowelOrConsonant(character) {
//     let lowerChar = character.toLowerCase();
//     switch (lowerChar) {
//         case 'a':
//         case 'e':
//         case 'i':
//         case 'o':
//         case 'u':
//             return character + " is a Vowel.";
//         default:
//             return character + " is a Consonant.";
//     }
// }


// let character = 'E';
// console.log(checkVowelOrConsonant(character)); 

// Q.21 What are the looping structures in JavaScript? Any one Example?

// --> Looping structures in JavaScript:

// for loop
// while loop
// do...while loop
// for...in loop (used for iterating over properties of an object)
// for...of loop (used for iterating over iterable objects like arrays, strings, etc.)

// example -->
 
// for (let i = 1; i <= 5; i++) {
//     console.log(i);
// }


// Q.22 Write a print 972 to 897 using for loop in JS?

// --> for (let i = 972; i >= 897; i--) {
//     console.log(i);
// }

// Q.23 Write to print factorial of given number?

// --> function factorial(n) {
//     let result = 1;
//     for (let i = n; i > 1; i--) {
//         result *= i;
//     }
//     return result;
// }


// let number = 5;
// console.log("Factorial of " + number + " is " + factorial(number)); 

// Q.24 Write to print Fibonacci series up to given numbers?

// --> function printFibonacciSeries(n) {
//     let a = 0, b = 1, next;
//     console.log(a); 
//     console.log(b); 

//     for (let i = 2; i < n; i++) {
//         next = a + b;
//         console.log(next);
//         a = b;
//         b = next;
//     }
// }


// let terms = 10; 
// printFibonacciSeries(terms);

// Q.25 Write to print number in reverse order e.g.: number = 64728 ---> reverse =82746 in JS?

// --> function reverseNumber(number) {
//     return parseInt(number.toString().split('').reverse().join(''), 10);
// }


// let number = 64728;
// console.log("Reversed number: " + reverseNumber(number)); 

// Q.26 Write a program make a summation of given number (E.g., 1523 Ans: - 11) in JS?

// --> function sumDigits(number) {
//     return number.toString().split('').reduce((sum, digit) => sum + parseInt(digit), 0);
// }


// let number = 1523;
// console.log("Summation of digits: " + sumDigits(number)); 

// Q.27 Write a program you have to make a summation of first and last Digit. (E.g., 1234 Ans: -
// 5) in JS?

// --> function sumFirstAndLastDigit(number) {
//     let numStr = number.toString();
//     let firstDigit = parseInt(numStr[0]);
//     let lastDigit = parseInt(numStr[numStr.length - 1]);
//     return firstDigit + lastDigit;
// }


// let number = 1234;
// console.log("Summation of first and last digit: " + sumFirstAndLastDigit(number)); 

// Q.28 Use console.log() and escape characters to print the following pattern in JS?
// 1 1 1 1 1
// 2 1 2 4 8
// 3 1 3 9 27
// 4 1 4 16 64
// 5 1 5 25 125

// --> for (let i = 1; i <= 5; i++) {
//     let pattern = "";
//     for (let j = 1; j <= 5; j++) {
//         pattern += (j === 1 ? i : Math.pow(i, j - 1)) + " ";
//     }
//     console.log(pattern.trim());
// }

// Q.29 Use pattern in console.log in JS?
// 1) 1
// 1 0
// 1 0 1
// 1 0 1 0
// 1 0 1 0 1

// --> for (let i = 1; i <= 5; i++) {
//     let pattern = "";
//     for (let j = 1; j <= i; j++) {
//         pattern += (j % 2 === 1 ? "1" : "0") + " ";
//     }
//     console.log(pattern.trim());
// }


// 2) A
// B C D
// E F
// G H I J
// K L M N O

// --> let charCode = 65;

// for (let i = 1; i <= 5; i++) {
//     let pattern = "";
    
//     for (let j = 1; j <= (i + (i - 1)); j++) {
//         pattern += String.fromCharCode(charCode) + " ";
//         charCode++;
//     }
//     console.log(pattern.trim());
// }

// 3) 1
// 2 3
// 4 5 6
// 7 8 9 10
// 11 12 13 14 15

// --> let num = 1;

// for (let i = 1; i <= 5; i++) {
//     let pattern = "";
    
//     for (let j = 1; j <= i; j++) {
//         pattern += num + " ";
//         num++;
//     }
//     console.log(pattern.trim());
// }
// (4) *
// * *
// * * *
// * * * *
// * * * * *

// for (let i = 1; i <= 5; i++) {
//     let pattern = "";
//     for (let j = 1; j <= i; j++) {
//         pattern += "* ";
//     }
//     console.log(pattern.trim());
// }
// Q.30 Accept 3 numbers from user using while loop and check each numbers palindrome

// --> function isPalindrome(number) {
//     let str = number.toString();
//     let reversed = str.split('').reverse().join('');
//     return str === reversed;
// }

// let count = 0;
// while (count < 3) {
//     let number = parseInt(prompt("Enter a number:"));
//     if (isPalindrome(number)) {
//         console.log(number + " is a palindrome.");
//     } else {
//         console.log(number + " is not a palindrome.");
//     }
//     count++;
// }

// Q.31 Write a JavaScript Program to display the current day and time in the following
// format. Sample Output: Today is Friday. Current Time is 12 PM: 12 : 22 2 ?

// --> const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
// const now = new Date();

// const day = days[now.getDay()];
// const hours = now.getHours();
// const minutes = now.getMinutes();
// const seconds = now.getSeconds();
// const ampm = hours >= 12 ? 'PM' : 'AM';

// const formattedHours = hours % 12 || 12;
// const formattedTime = `${formattedHours} ${ampm}:${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`;

// console.log(`Today is ${day}. Current Time is ${formattedTime}`);

// Q.32 Write a JavaScript program to get the current date?

// --> const now = new Date();
// console.log(now.toDateString());

// Q.33 Write a JavaScript program to compare two objects?

// --> function objectsAreEqual(obj1, obj2) {
//     return JSON.stringify(obj1) === JSON.stringify(obj2);
// }

// const obj1 = { a: 1, b: 2 };
// const obj2 = { a: 1, b: 2 };
// const obj3 = { a: 1, b: 3 };

// console.log(objectsAreEqual(obj1, obj2)); // true
// console.log(objectsAreEqual(obj1, obj3)); // false

// Q.34 Write a JavaScript program to convert an array of objects into CSV string?

// --> function arrayToCSV(array) {
//     const keys = Object.keys(array[0]);
//     const csv = array.map(row => keys.map(key => row[key]).join(',')).join('\n');
//     return keys.join(',') + '\n' + csv;
// }

// const data = [
//     { name: "Alice", age: 25 },
//     { name: "Bob", age: 30 }
// ];

// console.log(arrayToCSV(data));

// Q.35 Write a JavaScript program to capitalize first letter of a string?

// --> function capitalizeFirstLetter(str) {
//     return str.charAt(0).toUpperCase() + str.slice(1);
// }

// const string = "hello world";
// console.log(capitalizeFirstLetter(string));

// Q. 45 Write a JavaScript program to determine if a variable is array?

// --> function isArray(variable) {
//     return Array.isArray(variable);
// }

// console.log(isArray([1, 2, 3])); // true
// console.log(isArray({a: 1})); // false

// Q.46 Write a JavaScript program to clone an array?

// --> function cloneArray(arr) {
//     return arr.slice();
// }

// const original = [1, 2, 3];
// const cloned = cloneArray(original);
// console.log(cloned);

// Q.47 What is the drawback of declaring methods directly in JavaScript objects?

// --> Declaring methods directly in JavaScript objects can lead to performance issues because every time a
//  new object is created, the method is re-created. This results in higher memory usage compared to using 
//  prototypes or classes where methods are shared among instances.


// Q.48 Print the length of the string on the browser console using console.log()?

// -->  const str = "Hello, world!";
// console.log(str.length);

// Q.49 Change all the string characters to capital letters using toUpperCase() method?
 
// -->  const str = "hello world";
// console.log(str.toUpperCase());

// Q.50 What is the drawback of declaring methods directly in JavaScript objects?

// -->  Declaring methods directly in JavaScript objects can lead to performance issues because every time
//  a new object is created, the method is re-created. This results in higher memory usage compared to using 
//  prototypes or classes where methods are shared among instances.


// Q.51 Write a JavaScript program to get the current date. Expected Output : mm-dd-
// yyyy, mm/dd/yyyy or dd-mm-yyyy, dd/mm/yyyy?

// --> const now = new Date();

// const mmddyyyy = `${now.getMonth() + 1}-${now.getDate()}-${now.getFullYear()}`;
// const mmddyyyy_slash = `${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()}`;
// const ddmmyyyy = `${now.getDate()}-${now.getMonth() + 1}-${now.getFullYear()}`;
// const ddmmyyyy_slash = `${now.getDate()}/${now.getMonth() + 1}/${now.getFullYear()}`;

// console.log(mmddyyyy);
// console.log(mmddyyyy_slash);
// console.log(ddmmyyyy);
// console.log(ddmmyyyy_slash);

// Q.52 Use indexOf to determine the position of the first occurrence of a in 30 Days
// Of JavaScript?

// --> const str = "30 Days Of JavaScript";
// const position = str.indexOf('a');
// console.log(position);

// Q,53 Use lastIndexOf to determine the position of the last occurrence of a in 30 Days Of
// JavaScript?

// --> const str = "30 Days Of JavaScript";
// const position = str.lastIndexOf('a');
// console.log(position);

// Q.54 Form Validtion in JS?

// --> document.getElementById('myForm').addEventListener('submit', function(event) {
//     const name = document.getElementById('name').value;
//     const email = document.getElementById('email').value;
//     const password = document.getElementById('password').value;

//     if (name === '' || email === '' || password === '') {
//         alert('All fields must be filled out');
//         event.preventDefault();
//     }
// });

// Q.55 Form in Email, number, Password, Validation?

// --> document.getElementById('myForm').addEventListener('submit', function(event) {
//     const email = document.getElementById('email').value;
//     const number = document.getElementById('number').value;
//     const password = document.getElementById('password').value;
//     const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
//     const numberPattern = /^[0-9]+$/;

//     if (!emailPattern.test(email)) {
//         alert('Invalid email format');
//         event.preventDefault();
//     }

//     if (!numberPattern.test(number)) {
//         alert('Invalid number');
//         event.preventDefault();
//     }

//     if (password.length < 6) {
//         alert('Password must be at least 6 characters long');
//         event.preventDefault();
//     }
// });

// Q.56 Dynamic Form Validation in JS?

// --> document.getElementById('myForm').addEventListener('submit', function(event) {
//     const elements = this.elements;
//     let valid = true;

//     for (let i = 0; i < elements.length; i++) {
//         if (elements[i].type !== 'submit' && elements[i].value === '') {
//             alert(elements[i].name + ' is required');
//             valid = false;
//             break;
//         }
//     }

//     if (!valid) event.preventDefault();
// });

// Q.57 how many type of JS Event? How to use it ?

// --> document.getElementById('myButton').addEventListener('click', function() {
//     alert('Button clicked!');
// });
 
// Q.60 What is Bom vs Dom in JS?

// --> BOM (Browser Object Model) allows interaction with the browser, e.g., window, navigator, location. 
// DOM (Document Object Model) represents the document's structure, e.g., document, getElementById.
// Q.61 Array vs object defences in JS?

// --> Arrays are ordered lists of values, while objects are unordered collections of key-value pairs.
//  Arrays use numeric indices, whereas objects use strings or symbols as keys.
// Q.62 Split the string into an array using split() Method?

// --> const str = "30 Days Of JavaScript";
// const arr = str.split(' ');
// console.log(arr);

// Q.63 Check if the string contains a word Script using includes() method?

// --> const str = "30 Days Of JavaScript";
// const containsScript = str.includes('Script');
// console.log(containsScript);

// Q.64 Change all the string characters to lowercase letters using toLowerCase() Method.

// --> const str = "30 Days Of JavaScript";
// const lowerStr = str.toLowerCase();
// console.log(lowerStr);

// Q.65 What is Character at index 15 in ’30 Days of JavaScript’ string? Use charAt() method.

// --> const str = "30 Days Of JavaScript";
// const char = str.charAt(15);
// console.log(char);

// Q.66 copy to one string to another string in JS?

// --> let str1 = "Hello";
// let str2 = str1;
// console.log(str2);
